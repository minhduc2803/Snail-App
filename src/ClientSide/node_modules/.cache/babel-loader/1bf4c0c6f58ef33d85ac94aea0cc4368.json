{"ast":null,"code":"import _toConsumableArray from \"/home/ubuntu/MinhDuc/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/ubuntu/MinhDuc/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/MinhDuc/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/src/components/MessageList/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport axios from 'axios';\nimport './MessageList.css';\nvar MY_USER_ID = 'apple';\nexport default function MessageList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    getMessages();\n  }, []);\n\n  var asyncGetMessages = function asyncGetMessages() {\n    axios.post('http://localhost:8055/api/public/list-chat', {\n      ConversationID: props.Conversation.ConversationID\n    }).then(function (response) {\n      var newConversations = response.data.data.map(function (result) {\n        return {\n          photo: '#',\n          name: \"\".concat(result.Fullname),\n          text: 'Hello world! This is a long message that needs to be truncated.'\n        };\n      });\n      setMessages([].concat(_toConsumableArray(messages), _toConsumableArray(newConversations)));\n    });\n  };\n\n  var getMessages = function getMessages() {\n    var tempMessages = JSON.parse(\"\");\n\n    for (var i = 0; i < props.messages.lenght; i++) {\n      tempMessages.push({\n        id: props.message[i].id,\n        author: props.message[i].author,\n        message: props.message.length,\n        timestamp: props.message.timestamp\n      });\n    }\n\n    setMessages([].concat(_toConsumableArray(messages), _toConsumableArray(tempMessages)));\n  };\n\n  var renderMessages = function renderMessages() {\n    var i = 0;\n    var messageCount = messages.length;\n    var tempMessages = [];\n\n    while (i < messageCount) {\n      var previous = messages[i - 1];\n      var current = messages[i];\n      var next = messages[i + 1];\n      var isMine = current.author === MY_USER_ID;\n      var currentMoment = moment(current.timestamp);\n      var prevBySameAuthor = false;\n      var nextBySameAuthor = false;\n      var startsSequence = true;\n      var endsSequence = true;\n      var showTimestamp = true;\n\n      if (previous) {\n        var previousMoment = moment(previous.timestamp);\n        var previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        var nextMoment = moment(next.timestamp);\n        var nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(React.createElement(Message, {\n        key: i,\n        isMine: isMine,\n        startsSequence: startsSequence,\n        endsSequence: endsSequence,\n        showTimestamp: showTimestamp,\n        data: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })); // Proceed to the next message.\n\n      i += 1;\n    }\n\n    return tempMessages;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"message-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    title: \"Conversation Title\",\n    rightItems: [React.createElement(ToolbarButton, {\n      key: \"info\",\n      icon: \"ion-ios-information-circle-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"video\",\n      icon: \"ion-ios-videocam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"phone\",\n      icon: \"ion-ios-call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, renderMessages()), React.createElement(Compose, {\n    rightItems: [React.createElement(ToolbarButton, {\n      key: \"photo\",\n      icon: \"ion-ios-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"image\",\n      icon: \"ion-ios-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"audio\",\n      icon: \"ion-ios-mic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"money\",\n      icon: \"ion-ios-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"games\",\n      icon: \"ion-logo-game-controller-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(ToolbarButton, {\n      key: \"emoji\",\n      icon: \"ion-ios-happy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/ubuntu/MinhDuc/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/src/components/MessageList/index.js"],"names":["React","useEffect","useState","Compose","Toolbar","ToolbarButton","Message","moment","axios","MY_USER_ID","MessageList","props","messages","setMessages","getMessages","asyncGetMessages","post","ConversationID","Conversation","then","response","newConversations","data","map","result","photo","name","Fullname","text","tempMessages","JSON","parse","i","lenght","push","id","message","author","length","timestamp","renderMessages","messageCount","previous","current","next","isMine","currentMoment","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport './MessageList.css';\n\nconst MY_USER_ID = 'apple';\n\nexport default function MessageList(props) {\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    getMessages();\n  },[])\n\n  const asyncGetMessages = () => {\n    axios.post('http://localhost:8055/api/public/list-chat',{\n      ConversationID: props.Conversation.ConversationID\n    }).then(response => {\n        let newConversations = response.data.data.map(result => {\n          return {\n            photo: '#',\n            name: `${result.Fullname}`,\n            text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        setMessages([...messages, ...newConversations])\n    });\n  }\n  \n  const getMessages = () => {\n    var tempMessages = JSON.parse(\"\");\n    for(var i = 0; i < props.messages.lenght; i++){\n        tempMessages.push({\n          id: props.message[i].id,\n          author: props.message[i].author,\n          message: props.message.length,\n          timestamp: props.message.timestamp\n        })\n    }\n     \n      setMessages([...messages, ...tempMessages])\n  }\n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n\n        <div className=\"message-list-container\">{renderMessages()}</div>\n\n        <Compose rightItems={[\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]}/>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}