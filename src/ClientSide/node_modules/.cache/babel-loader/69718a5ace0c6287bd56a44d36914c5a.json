{"ast":null,"code":"import _toConsumableArray from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/src/components/ConversationList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport './ConversationList.css';\n\nvar ConversationList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConversationList, _React$Component);\n\n  function ConversationList(props) {\n    var _this;\n\n    _classCallCheck(this, ConversationList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConversationList).call(this, props));\n    _this.state = {\n      user: props.user\n    };\n\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        conversations = _useState2[0],\n        setConversations = _useState2[1];\n\n    return _this;\n  }\n\n  _createClass(ConversationList, [{\n    key: \"getConversations\",\n    value: function getConversations() {\n      axios.post('http://localhost:8055/api/public/list-conversation', {\n        UserID: this.state.UserID\n      }).then(function (response) {\n        var newConversations = response.data.map(function (result) {\n          return {\n            photo: '#',\n            name: \"\".concat(result.Fullname),\n            text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        setConversations([].concat(_toConsumableArray(conversations), _toConsumableArray(newConversations)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"conversation-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        title: \"Messenger\",\n        leftItems: [React.createElement(ToolbarButton, {\n          key: \"cog\",\n          icon: \"ion-ios-cog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })],\n        rightItems: [React.createElement(ToolbarButton, {\n          key: \"add\",\n          icon: \"ion-ios-add-circle-outline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(ConversationSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), conversations.map(function (conversation) {\n        return React.createElement(ConversationListItem, {\n          key: conversation.name,\n          data: conversation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return ConversationList;\n}(React.Component);\n\nexport { ConversationList as default };","map":{"version":3,"sources":["/home/minhduc/vng/module-11/fresher-program-2020/submissions/module-11/ducnm8/src/clientSide/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","ConversationList","props","state","user","conversations","setConversations","post","UserID","then","response","newConversations","data","map","result","photo","name","Fullname","text","conversation","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,wBAAP;;IAEqBC,gB;;;;;AACnB,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,IAAI,EAAEF,KAAK,CAACE;AADF,KAAZ;;AAFgB,oBAMwBV,QAAQ,CAAC,EAAD,CANhC;AAAA;AAAA,QAMXW,aANW;AAAA,QAMIC,gBANJ;;AAAA;AAQnB;;;;uCAEmB;AAChBN,MAAAA,KAAK,CAACO,IAAN,CAAW,oDAAX,EAAgE;AAC9DC,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK;AAD2C,OAAhE,EAIEC,IAJF,CAIO,UAAAC,QAAQ,EAAI;AACf,YAAIC,gBAAgB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAC,MAAM,EAAI;AACjD,iBAAO;AACLC,YAAAA,KAAK,EAAE,GADF;AAELC,YAAAA,IAAI,YAAKF,MAAM,CAACG,QAAZ,CAFC;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD,SANsB,CAAvB;AAOAZ,QAAAA,gBAAgB,8BAAKD,aAAL,sBAAuBM,gBAAvB,GAAhB;AACH,OAbD;AAcD;;;6BACO;AACF,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,SAAS,EAAE,CACT,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAC,KAAnB;AAAyB,UAAA,IAAI,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS,CAFb;AAKE,QAAA,UAAU,EAAE,CACV,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAC,KAAnB;AAAyB,UAAA,IAAI,EAAC,4BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAYIN,aAAa,CAACQ,GAAd,CAAkB,UAAAM,YAAY;AAAA,eAC5B,oBAAC,oBAAD;AACE,UAAA,GAAG,EAAEA,YAAY,CAACH,IADpB;AAEE,UAAA,IAAI,EAAEG,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA9B,CAZJ,CADF;AAsBD;;;;EAlDuC1B,KAAK,CAAC2B,S;;SAA/BnB,gB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\n\nimport './ConversationList.css';\n\nexport default class ConversationList extends React.Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      user: props.user,\n    }\n  \n  const [conversations, setConversations] = useState([]);\n  \n}\n\n getConversations() {\n    axios.post('http://localhost:8055/api/public/list-conversation',{\n      UserID: this.state.UserID\n    }\n    \n    ).then(response => {\n        let newConversations = response.data.map(result => {\n          return {\n            photo: '#',\n            name: `${result.Fullname}`,\n            text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        setConversations([...conversations, ...newConversations])\n    });\n  }\n  render(){\n        return (\n          <div className=\"conversation-list\">\n            <Toolbar\n              title=\"Messenger\"\n              leftItems={[\n                <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n              ]}\n              rightItems={[\n                <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n              ]}\n            />\n            <ConversationSearch />\n            {\n              conversations.map(conversation =>\n                <ConversationListItem\n                  key={conversation.name}\n                  data={conversation}\n                />\n              )\n            }\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}